/*
* File: Problem2.cpp
* Author: Gary Hubley
* Company: Self
* Description:
*		This is my attempt at problem1 from projecteuler.com
*		
* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the 
* first 10 terms will be:
*		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*		
* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-
* valued terms.
*/

#include "EulerLib.h"
#include <iostream>

void problem002()
{
	int prev1 = 2; // first previous number
	int prev2 = 1; // second previous number
	int current = 3; // current number in the sequence.

	// start with sum = 2, so you dont have to add it later. 
	int sum = 2;

	while( current < 4000000 )
	{
		// calculate next term
		prev2 = prev1;
		prev1 = current;
		if ( isEven( current = prev1 + prev2 ) )
			sum += current;

	}

	std::cout << "Sum: " << sum << std::endl;
	std::cin.get();
}
